@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage


<table class="mdc-data-table__table">
    <tbody class="mdc-data-table__content">
        @for (int i = 0; i < itemList.Count; i++)
        {
            var name = itemList[i].Index;
            <tr class="mdc-data-table__cell">
                <td><input type="checkbox" class="mdc-checkbox__native-control " id="mb_dc47ce2d-c4e8-4364-beed-c26951f238df" name="@name" checked="@itemList[i].BoxChecked" @onclick="()=>SaveCheck(name)"> @itemList[i].Text </td>
            </tr>
        }
    </tbody>
</table>

@code{
    List<ListItem> itemList = new List<ListItem>();

    protected override async Task OnInitializedAsync()

    {
        for (int i = 0; i < await localStorage.LengthAsync(); i++)
        {
            string key = await localStorage.KeyAsync(i);
            if (key.Substring(0,4)=="line")
            {
                string json = await localStorage.GetItemAsStringAsync(key);

                ListItem item = JsonConvert.DeserializeObject<ListItem>(json);
                itemList.Add(item);
            }
        }
    }

    private async void SaveCheck(string name){

        string json = await localStorage.GetItemAsStringAsync(name);
        ListItem item = JsonConvert.DeserializeObject<ListItem>(json);
        if (item.BoxChecked)
        {
            item.BoxChecked = false;
        }
        else
        {
            item.BoxChecked = true;
        }
        await localStorage.RemoveItemAsync(name);
        json = JsonConvert.SerializeObject(item);
        await localStorage.SetItemAsync<string>(name, json);
    }


}